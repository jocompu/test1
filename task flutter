import 'package:flutter/material.dart';

void main() {
  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});

  // This widget is the root of your application.
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      title: 'Flutter Demo',
      theme: ThemeData(
        // This is the theme of your application.
        //
        // TRY THIS: Try running your application with "flutter run". You'll see
        // the application has a purple toolbar. Then, without quitting the app,
        // try changing the seedColor in the colorScheme below to Colors.green
        // and then invoke "hot reload" (save your changes or press the "hot
        // reload" button in a Flutter-supported IDE, or press "r" if you used
        // the command line to start the app).
        //
        // Notice that the counter didn't reset back to zero; the application
        // state is not lost during the reload. To reset the state, use hot
        // restart instead.
        //
        // This works for code too, not just values: Most code changes can be
        // tested with just a hot reload.
        colorScheme: ColorScheme.fromSeed(seedColor: Colors.deepPurple),
        useMaterial3: true,
      ),
      home: CounterScreen(),
    );
  }
}
class CounterScreen extends StatefulWidget {
  const CounterScreen({super.key});

  @override
  State<CounterScreen> createState() => _CounterScreenState();
}

class _CounterScreenState extends State<CounterScreen> {
  int result=0;
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        backgroundColor: Colors.blue,
        title: Text('home',style: TextStyle(color: Colors.white),),
      ),
      body: Center(
        child:
        Column(
          mainAxisAlignment: MainAxisAlignment.center,
       children: [
         Text(result.toString(),style: TextStyle(color: Colors.amber ,fontSize: 30),),

         SizedBox(height: 25,),
         Row(
mainAxisAlignment: MainAxisAlignment.center,
children: [
 ElevatedButton(onPressed: (){
   setState(() {
     result++;
   });
 },style: ElevatedButton.styleFrom(
   backgroundColor: Colors.red
 )
 , child:Icon(Icons.add,color: Colors.white,)),
  SizedBox(width: 10,),

  ElevatedButton(onPressed: (){
    if(result !=0){
      setState(() {
        result--;
      });
    }

  },style: ElevatedButton.styleFrom(
    backgroundColor: Colors.red,
  )
  , child:Icon(Icons.remove,color: Colors.white,) ),

],



         ),
         SizedBox(height: 10),
Row(
    mainAxisAlignment: MainAxisAlignment.center,
    children: [

  ElevatedButton(onPressed: (){


  },style:ElevatedButton.styleFrom(
    backgroundColor: Colors.blue,
  ) , child: Row(
    mainAxisSize: MainAxisSize.min,
    children: [
      Icon(Icons.facebook,color: Colors.white,),
      SizedBox(width: 4,),
      Text('Login with Facebook' ,style:TextStyle(fontSize: 20,color: Colors.white),)
    ],
  )),
  ]
),
         SizedBox(height: 10),
         Row(
             mainAxisAlignment: MainAxisAlignment.center,
             children: [

               ElevatedButton(onPressed: (){
                 print("Login with Facebook clicked!");

               },style:ElevatedButton.styleFrom(
                 backgroundColor: Colors.blue,
               ) , child: Row(
                 mainAxisSize: MainAxisSize.min,
                 children: [
                   Icon(Icons.access_alarm,color: Colors.white,),
                   SizedBox(width: 4,),
                   Text('alarms is notification' ,style:TextStyle(fontSize: 20,color: Colors.white),)
                 ],
               )),
             ]
         )

       ],
        ),

      ),

    )   ;
  }
}








